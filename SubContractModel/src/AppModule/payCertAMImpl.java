package AppModule;

import AppModule.common.payCertAM;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 13 16:57:13 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class payCertAMImpl extends ApplicationModuleImpl implements payCertAM {
    /**
     * This is the default constructor (do not remove).
     */
    public payCertAMImpl() {
    }

    /**
     * Container's getter for XxscCertificationHeadersVO1.
     * @return XxscCertificationHeadersVO1
     */
    public ViewObjectImpl getXxscCertificationHeadersVO1() {
        return (ViewObjectImpl)findViewObject("XxscCertificationHeadersVO1");
    }

    /**
     * Container's getter for XxscCertificationLinesVO1.
     * @return XxscCertificationLinesVO1
     */
    public ViewObjectImpl getXxscCertificationLinesVO1() {
        return (ViewObjectImpl)findViewObject("XxscCertificationLinesVO1");
    }

    /**
     * Container's getter for XxscRetReleasesVO1.
     * @return XxscRetReleasesVO1
     */
    public ViewObjectImpl getXxscRetReleasesVO1() {
        return (ViewObjectImpl)findViewObject("XxscRetReleasesVO1");
    }


    /**
     * Container's getter for contractROVO1.
     * @return contractROVO1
     */
    public ViewObjectImpl getcontractROVO1() {
        return (ViewObjectImpl)findViewObject("contractROVO1");
    }


    /**
     * Container's getter for CertLineHdrFkLink1.
     * @return CertLineHdrFkLink1
     */
    public ViewLinkImpl getCertLineHdrFkLink1() {
        return (ViewLinkImpl)findViewLink("CertLineHdrFkLink1");
    }

    /**
     * Container's getter for RetRelHdrFkLink1.
     * @return RetRelHdrFkLink1
     */
    public ViewLinkImpl getRetRelHdrFkLink1() {
        return (ViewLinkImpl)findViewLink("RetRelHdrFkLink1");
    }


    /**
     * Container's getter for certHdrContHdrViewVL1.
     * @return certHdrContHdrViewVL1
     */
    public ViewLinkImpl getcertHdrContHdrViewVL1() {
        return (ViewLinkImpl)findViewLink("certHdrContHdrViewVL1");
    }


    public void createNewCertification(){
        System.err.println("===" +ADFContext.getCurrent().getSessionScope().get("contHdrID"));
        System.err.println("===" +ADFContext.getCurrent().getSessionScope().get("version"));
        System.err.println("===" +ADFContext.getCurrent().getSessionScope().get("ordID"));
        System.err.println("===" +ADFContext.getCurrent().getSessionScope().get("paymentID"));
        System.err.println("===" +ADFContext.getCurrent().getSessionScope().get("paymentNum"));
        ViewObject certificaHrdVO = getXxscCertificationHeadersVO1();
        ViewObject certificaLineVO = getXxscCertificationLinesVO1();
        // Certification New Row
        Row certificaHrdRow = certificaHrdVO.createRow();
        certificaHrdRow.setAttribute("ContHeaderId",ADFContext.getCurrent().getSessionScope().get("contHdrID"));
        certificaHrdRow.setAttribute("Version",ADFContext.getCurrent().getSessionScope().get("version"));
        certificaHrdRow.setAttribute("OrgId",ADFContext.getCurrent().getSessionScope().get("ordID"));
        certificaHrdRow.setAttribute("PaymentTermId", ADFContext.getCurrent().getSessionScope().get("paymentID"));
        certificaHrdRow.setAttribute("PaymentTerm", ADFContext.getCurrent().getSessionScope().get("paymentNum"));
        certificaHrdVO.insertRow(certificaHrdRow);
        certificaHrdVO.executeQuery();
        System.err.println("header id-->  " + certificaHrdRow.getAttribute("CertHeaderId"));
        // Filter contract line
        ViewObject contractLinedVO = getXxscContractLinesVO2();
        ViewCriteria vc = contractLinedVO.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        System.err.println("--=LINE=--" +ADFContext.getCurrent().getSessionScope().get("contHdrID"));
        vcRow.setAttribute("ContHeaderId",ADFContext.getCurrent().getSessionScope().get("contHdrID"));
        vcRow.setAttribute("Version",ADFContext.getCurrent().getSessionScope().get("version"));
        vc.addRow(vcRow);
        contractLinedVO.applyViewCriteria(vc);
        contractLinedVO.executeQuery();
        System.err.println("==COUNT==" +contractLinedVO.getEstimatedRowCount());
        // Insert Certification Line Row
        RowSetIterator rs = contractLinedVO.createRowSetIterator(null);
        while (rs.hasNext()) {
            Row contracrLineRow = rs.next();
            Object hid = contracrLineRow.getAttribute("ContHeaderId");
            Object lid = contracrLineRow.getAttribute("ContLineId");
            Object version = contracrLineRow.getAttribute("Version");
            System.err.println("HID==" + hid + "LID===" + lid+"==="+version);
            Row certificaLineRow = certificaLineVO.createRow();

            System.err.println("header id-->  " +certificaHrdRow.getAttribute("CertHeaderId"));
            certificaLineRow.setAttribute("ContractHeaderId", hid);
            certificaLineRow.setAttribute("ContLineId", lid);
            certificaLineRow.setAttribute("Version", version);
            certificaLineRow.setAttribute("CertHeaderId", certificaHrdRow.getAttribute("CertHeaderId"));
            certificaLineRow.setAttribute("OrgId", ADFContext.getCurrent().getSessionScope().get("ordID"));
            certificaLineVO.insertRow(certificaLineRow);
            certificaLineVO.executeQuery();
            System.err.println("Certification Line inserted");
        }

    }

    /**
     * Container's getter for XxscContractLinesVO2.
     * @return XxscContractLinesVO2
     */
    public ViewObjectImpl getXxscContractLinesVO2() {
        return (ViewObjectImpl)findViewObject("XxscContractLinesVO2");
    }

    /**
     * Container's getter for certificationSearchROVO1.
     * @return certificationSearchROVO1
     */
    public ViewObjectImpl getcertificationSearchROVO1() {
        return (ViewObjectImpl)findViewObject("certificationSearchROVO1");
    }
    
        public void refreshCertification(){
        System.err.println("==CERT==PAGE 0=="+ADFContext.getCurrent().getSessionScope().get("page"));
            if("certification".equalsIgnoreCase((String)ADFContext.getCurrent().getSessionScope().get("page"))){
                System.err.println("==CERT==PAGE=="+ADFContext.getCurrent().getSessionScope().get("page"));
                getXxscCertificationHeadersVO1().createRow();   
                getXxscCertificationHeadersVO1().executeQuery();
            }
          else{
                createNewCertification();
                getXxscCertificationHeadersVO1().executeQuery();
                getXxscCertificationLinesVO1().executeQuery();
//                getXxscContractHeadersVO1().executeQuery();
            }
        System.err.println("==CERT==PAGE END=="+ADFContext.getCurrent().getSessionScope().get("page"));
      
       
    }


}
